/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _oclParser = __webpack_require__(13);

	var _oclParser2 = _interopRequireDefault(_oclParser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Person = function Person(name, age) {
	    _classCallCheck(this, Person);

	    this.name = name;
	    this.age = age;
	};

	var Example = function () {
	    function Example(id) {
	        _classCallCheck(this, Example);

	        this.id = id;
	    }

	    _createClass(Example, [{
	        key: 'run',
	        value: function run(fn) {
	            var elementById = document.getElementById('example' + this.id + '-result');
	            if (elementById) {
	                elementById.innerText = fn() ? 'valid' : 'invalid';
	            }
	        }
	    }]);

	    return Example;
	}();

	new Example(1).run(function () {
	    var person = new Person('Stephan', 29);

	    var oclExpression = ['context Person', '   inv: self.parent <> self'].join('\n');

	    var oclRule = new _oclParser2.default(oclExpression).parse();
	    return oclRule.evaluate(person);
	});

	new Example(2).run(function () {
	    var oclExpression = ['context Person', '   inv ChildrenAreAllYounger: self.children->forAll(c|c.age < self.age)'].join('\n');

	    var mother = new Person("Henriette", 67);
	    mother.children = [{ name: 'Heike', age: 27 }, { name: 'Swen', age: 47 }];

	    var oclRule = new _oclParser2.default(oclExpression).parse();
	    return oclRule.evaluate(mother);
	});

	new Example(3).run(function () {
	    var mother = new Person("Henriette", 67);
	    mother.children = [{ name: 'Heike', age: 27 }, { name: 'Swen', age: 47 }, { name: 'Heike', age: 30 }];

	    var oclExpression = ['context Person', '   inv: self.children->forAll(c1,c2| c1.name <> c2.name)'].join('\n');

	    var oclRule = new _oclParser2.default(oclExpression).parse();
	    return oclRule.evaluate(mother);
	});

	new Example(5).run(function () {
	    var MetaEntity = function MetaEntity() {
	        _classCallCheck(this, MetaEntity);
	    };

	    var metaEntity = new MetaEntity();
	    metaEntity.name = "Employee";
	    metaEntity.isIntrinsic = true;
	    metaEntity.metaAttribute = [{ name: 'lastName', type: 'string' }, { name: 'firstName', type: 'float', isIntrinsic: true }, { name: 'dateOfBirth', type: 'date', isIntrinsic: true }, { name: 'formalQualification', type: 'string', isIntrinsic: true }];

	    var oclExpression = ['context MetaEntity inv:', '   self.isIntrinsic = true implies self.metaAttribute->forAll(a | a.isInstrinsic = true)'].join('\n');

	    var oclRule = new _oclParser2.default(oclExpression).parse();
	    return oclRule.evaluate(metaEntity);
	});

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Expression = function () {
	    function Expression() {
	        _classCallCheck(this, Expression);

	        this.type = this.__proto__.constructor.name;
	    }

	    _createClass(Expression, [{
	        key: 'evaluate',
	        value: function evaluate(obj) {
	            throw new Error('evaluate() function not implemented!');
	        }
	    }]);

	    return Expression;
	}();

	exports.default = Expression;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AttributeCallExpression = function (_Expression) {
	    _inherits(AttributeCallExpression, _Expression);

	    function AttributeCallExpression(variable, attribute) {
	        _classCallCheck(this, AttributeCallExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AttributeCallExpression).call(this));

	        _this.variable = variable;

	        if (attribute && attribute.map) {
	            _this.attributes = attribute;
	        } else {
	            _this.attributes = [attribute];
	        }
	        return _this;
	    }

	    _createClass(AttributeCallExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj, variables) {
	            var context = void 0;

	            if (this.variable === 'self') {
	                context = obj;
	            } else {
	                context = variables[this.variable];
	            }

	            return this._attributeValue(context, this.attributes.slice());
	        }
	    }, {
	        key: '_attributeValue',
	        value: function _attributeValue(self, attributes) {
	            var obj = self;
	            if (obj) {
	                obj = obj[attributes.shift()];

	                if (attributes.length > 0) {
	                    return this._attributeValue(obj, attributes);
	                }
	            }

	            return obj;
	        }
	    }]);

	    return AttributeCallExpression;
	}(_expression2.default);

	exports.default = AttributeCallExpression;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BooleanExpression = function (_Expression) {
	    _inherits(BooleanExpression, _Expression);

	    function BooleanExpression(value) {
	        _classCallCheck(this, BooleanExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BooleanExpression).call(this));

	        _this.value = JSON.parse(value);
	        return _this;
	    }

	    _createClass(BooleanExpression, [{
	        key: 'evaluate',
	        value: function evaluate() {
	            return this.value;
	        }
	    }]);

	    return BooleanExpression;
	}(_expression2.default);

	exports.default = BooleanExpression;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ContextExpression = function (_Expression) {
	    _inherits(ContextExpression, _Expression);

	    function ContextExpression(targetType, inv) {
	        _classCallCheck(this, ContextExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ContextExpression).call(this));

	        _this.targetType = targetType;
	        _this.inv = inv || {};
	        return _this;
	    }

	    _createClass(ContextExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj) {
	            var objectType = obj.__proto__.constructor.name;
	            if (objectType === this.targetType && this.inv && this.inv.evaluate) {
	                return this.inv.evaluate(obj);
	            }

	            return false;
	        }
	    }]);

	    return ContextExpression;
	}(_expression2.default);

	exports.default = ContextExpression;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ImpliesExpression = function (_Expression) {
	    _inherits(ImpliesExpression, _Expression);

	    function ImpliesExpression(left, right) {
	        _classCallCheck(this, ImpliesExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ImpliesExpression).call(this));

	        _this.left = left;
	        _this.right = right;
	        return _this;
	    }

	    _createClass(ImpliesExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj, variables) {
	            var left = this.left.evaluate(obj, variables);
	            var right = this.right.evaluate(obj, variables);

	            if (left) {
	                return right;
	            } else {
	                return true;
	            }
	        }
	    }]);

	    return ImpliesExpression;
	}(_expression2.default);

	exports.default = ImpliesExpression;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var InvariantExpression = function (_Expression) {
	    _inherits(InvariantExpression, _Expression);

	    function InvariantExpression(oclExpression, name) {
	        _classCallCheck(this, InvariantExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(InvariantExpression).call(this));

	        _this.definition = oclExpression;
	        if (name) {
	            _this.name = name || '';
	        }
	        return _this;
	    }

	    _createClass(InvariantExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj) {
	            return this.definition.evaluate(obj);
	        }
	    }]);

	    return InvariantExpression;
	}(_expression2.default);

	exports.default = InvariantExpression;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var IsEmptyExpression = function (_Expression) {
	    _inherits(IsEmptyExpression, _Expression);

	    function IsEmptyExpression(source) {
	        _classCallCheck(this, IsEmptyExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(IsEmptyExpression).call(this));

	        _this.source = source;
	        return _this;
	    }

	    _createClass(IsEmptyExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj, variables) {
	            var source = this.source.evaluate(obj, variables);
	            return !(source && source.map && source.length != 0);
	        }
	    }]);

	    return IsEmptyExpression;
	}(_expression2.default);

	exports.default = IsEmptyExpression;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var IteratorExpression = function (_Expression) {
	    _inherits(IteratorExpression, _Expression);

	    function IteratorExpression(source, iterators, body) {
	        _classCallCheck(this, IteratorExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(IteratorExpression).call(this));

	        _this.source = source;
	        _this.iterators = iterators;
	        _this.body = body;
	        return _this;
	    }

	    _createClass(IteratorExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj) {
	            if (this.iterators.length === 1) {
	                return this._evaluateOneIterator(obj);
	            } else if (this.iterators.length === 2) {
	                return this._evaluateTwoIterators(obj);
	            }
	        }
	    }, {
	        key: '_evaluateOneIterator',
	        value: function _evaluateOneIterator(obj) {
	            var _this2 = this;

	            var source = this.source.evaluate(obj);
	            return !source.map(function (c) {
	                var variables = {};
	                variables[_this2.iterators[0]] = c;
	                return _this2.body.evaluate(obj, variables);
	            }).some(function (r) {
	                return r === false;
	            });
	        }
	    }, {
	        key: '_evaluateTwoIterators',
	        value: function _evaluateTwoIterators(obj) {
	            var source = this.source.evaluate(obj);
	            var result = [];

	            for (var i = 0; i < source.length; i++) {
	                var variables = {};
	                variables[this.iterators[0]] = source[i];

	                for (var j = i + 1; j < source.length; j++) {
	                    variables[this.iterators[1]] = source[j];
	                    result.push(this.body.evaluate(obj, variables));
	                }
	            }

	            return !result.some(function (r) {
	                return r === false;
	            });
	        }
	    }]);

	    return IteratorExpression;
	}(_expression2.default);

	exports.default = IteratorExpression;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var NumberExpression = function (_Expression) {
	    _inherits(NumberExpression, _Expression);

	    function NumberExpression(value) {
	        _classCallCheck(this, NumberExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NumberExpression).call(this));

	        if (!isNaN(+value)) {
	            _this.value = +value;
	        } else {
	            throw new SyntaxError('NumberExpression: \'' + value + '\' is not a Number!');
	        }
	        return _this;
	    }

	    _createClass(NumberExpression, [{
	        key: 'evaluate',
	        value: function evaluate() {
	            return this.value;
	        }
	    }]);

	    return NumberExpression;
	}(_expression2.default);

	exports.default = NumberExpression;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var OperationCallExpression = function (_Expression) {
	    _inherits(OperationCallExpression, _Expression);

	    function OperationCallExpression(operator, left, right) {
	        _classCallCheck(this, OperationCallExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(OperationCallExpression).call(this));

	        _this.operator = operator;
	        _this.left = left;
	        _this.right = right;
	        return _this;
	    }

	    _createClass(OperationCallExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj, variables) {
	            var left = this.left.evaluate(obj, variables);
	            var right = this.right.evaluate(obj, variables);
	            if (this.operator === '<>') {
	                return left !== right;
	            } else if (this.operator === '<=') {
	                return left <= right;
	            } else if (this.operator === '>=') {
	                return left >= right;
	            } else if (this.operator === '>') {
	                return left > right;
	            } else if (this.operator === '<') {
	                return left < right;
	            } else if (this.operator === '=') {
	                return left === right;
	            }

	            throw new SyntaxError('Unhandled operator found: \'' + this.operator + '\'');
	        }
	    }]);

	    return OperationCallExpression;
	}(_expression2.default);

	exports.default = OperationCallExpression;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StringExpression = function (_Expression) {
	    _inherits(StringExpression, _Expression);

	    function StringExpression(value) {
	        _classCallCheck(this, StringExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(StringExpression).call(this));

	        _this.value = value;
	        return _this;
	    }

	    _createClass(StringExpression, [{
	        key: 'evaluate',
	        value: function evaluate() {
	            return this.value;
	        }
	    }]);

	    return StringExpression;
	}(_expression2.default);

	exports.default = StringExpression;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _expression = __webpack_require__(1);

	var _expression2 = _interopRequireDefault(_expression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var VariableExpression = function (_Expression) {
	    _inherits(VariableExpression, _Expression);

	    function VariableExpression(variable) {
	        _classCallCheck(this, VariableExpression);

	        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(VariableExpression).call(this));

	        _this.variable = variable;
	        return _this;
	    }

	    _createClass(VariableExpression, [{
	        key: 'evaluate',
	        value: function evaluate(obj) {
	            if (this.variable === 'self') {
	                return obj;
	            }
	        }
	    }]);

	    return VariableExpression;
	}(_expression2.default);

	exports.default = VariableExpression;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _attributeCallExpression = __webpack_require__(2);

	var _attributeCallExpression2 = _interopRequireDefault(_attributeCallExpression);

	var _contextExpression = __webpack_require__(4);

	var _contextExpression2 = _interopRequireDefault(_contextExpression);

	var _impliesExpression = __webpack_require__(5);

	var _impliesExpression2 = _interopRequireDefault(_impliesExpression);

	var _invariantExpression = __webpack_require__(6);

	var _invariantExpression2 = _interopRequireDefault(_invariantExpression);

	var _isEmptyExpression = __webpack_require__(7);

	var _isEmptyExpression2 = _interopRequireDefault(_isEmptyExpression);

	var _iteratorExpression = __webpack_require__(8);

	var _iteratorExpression2 = _interopRequireDefault(_iteratorExpression);

	var _numberExpression = __webpack_require__(9);

	var _numberExpression2 = _interopRequireDefault(_numberExpression);

	var _operationCallExpression = __webpack_require__(10);

	var _operationCallExpression2 = _interopRequireDefault(_operationCallExpression);

	var _stringExpression = __webpack_require__(11);

	var _stringExpression2 = _interopRequireDefault(_stringExpression);

	var _variableExpression = __webpack_require__(12);

	var _variableExpression2 = _interopRequireDefault(_variableExpression);

	var _booleanExpression = __webpack_require__(3);

	var _booleanExpression2 = _interopRequireDefault(_booleanExpression);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NumberPattern = '([\\d]+)';
	var StringPattern = '"([^"]*)"';
	var BooleanPattern = '(true|false)';
	var VariablePattern = '([\\w\\d]+\\.?)';
	var AttributePattern = '(([\\w\\d]*)\\.([\\w\\d]*))';
	var Expression = StringPattern + '|' + NumberPattern + '|' + AttributePattern + '|' + VariablePattern;

	var InvariantExpressionPattern = 'inv\\s*([\\w\\d]*)\\s*:(.*)';
	var FunctionCallExpressionPattern = AttributePattern + '->([\\w]*)\\((.*)\\)';
	var OperationCallExpressionPattern = '(' + Expression + ')\\s?(<=|>=|<>|=|<|>)\\s?(' + Expression + ')';
	var IteratorExpressionPattern = AttributePattern + '->forAll\\(([\\w\\d]*)\\s*(,\\s*([\\w\\d]*))?\\s*\\|([^)]*)\\)';
	var ImpliesExpressionPattern = '(' + FunctionCallExpressionPattern + '|' + OperationCallExpressionPattern + ')\\simplies\\s(' + FunctionCallExpressionPattern + '|' + OperationCallExpressionPattern + ')';
	var ContextExpressionPattern = 'context\\s?(\\w*)';

	var OclParser = function () {
	    function OclParser(oclExpression) {
	        _classCallCheck(this, OclParser);

	        this.oclExpression = OclParser.trimLeft(oclExpression.replace(/\n/g, ' '));
	    }

	    _createClass(OclParser, [{
	        key: 'parse',
	        value: function parse() {
	            var oclExpression = OclParser.trimLeft(this.oclExpression),
	                match = void 0,
	                expr = void 0;

	            if (match = OclParser.isExpression(ContextExpressionPattern, oclExpression)) {
	                expr = new _contextExpression2.default(match[1], this.parseInvariant(oclExpression.slice(match[0].length)));
	            } else {
	                throw new SyntaxError('Unexpected syntax: \'' + oclExpression + '\'');
	            }

	            return expr;
	        }
	    }, {
	        key: 'parseInvariant',
	        value: function parseInvariant(oclExpression) {
	            oclExpression = OclParser.trimLeft(oclExpression);
	            var match = void 0;

	            if (match = OclParser.isExpression(InvariantExpressionPattern, oclExpression)) {
	                if (match[2]) {
	                    return new _invariantExpression2.default(this.parsePartialOcl(match[2]), match[1]);
	                }

	                throw new SyntaxError('Invariant may not be empty if specified!');
	            }

	            return {};
	        }
	    }, {
	        key: 'parsePartialOcl',
	        value: function parsePartialOcl(oclExpression) {
	            oclExpression = OclParser.trimLeft(oclExpression);
	            var match, expr;

	            if (oclExpression.length === 0) {
	                return {};
	            }

	            if (match = OclParser.isExpression(IteratorExpressionPattern, oclExpression)) {
	                var iterators = [];
	                match[4] ? iterators.push(match[4]) : '';
	                match[6] ? iterators.push(match[6]) : '';
	                expr = new _iteratorExpression2.default(this.parsePartialOcl(match[1]), iterators, this.parsePartialOcl(match[7]));
	            } else if (match = OclParser.isExpression(ImpliesExpressionPattern, oclExpression)) {
	                expr = new _impliesExpression2.default(this.parsePartialOcl(match[1]), this.parsePartialOcl(match[22]));
	            } else if (match = OclParser.isExpression(FunctionCallExpressionPattern, oclExpression)) {
	                expr = this.parseOclFunctionCall(oclExpression, match);
	            } else if (match = OclParser.isExpression(OperationCallExpressionPattern, oclExpression)) {
	                expr = new _operationCallExpression2.default(match[8], this.parsePartialOcl(match[1]), this.parsePartialOcl(match[9]));
	            } else if (match = OclParser.isExpression(BooleanPattern, oclExpression)) {
	                expr = new _booleanExpression2.default(match[1]);
	            } else if (match = OclParser.isExpression(NumberPattern, oclExpression)) {
	                expr = new _numberExpression2.default(match[1]);
	            } else if (match = OclParser.isExpression(StringPattern, oclExpression)) {
	                expr = new _stringExpression2.default(match[1]);
	            } else if (match = OclParser.isExpression(AttributePattern, oclExpression)) {
	                expr = new _attributeCallExpression2.default(match[2], match[3]);
	            } else if (match = OclParser.isExpression(VariablePattern, oclExpression)) {
	                expr = new _variableExpression2.default(match[1]);
	            } else {
	                throw new SyntaxError('Unexpected syntax: \'' + oclExpression + '\'');
	            }

	            return expr;
	        }
	    }, {
	        key: 'parseOclFunctionCall',
	        value: function parseOclFunctionCall(oclExpression, match) {
	            var functionName = match[4].toUpperCase();

	            if (functionName === 'ISEMPTY') {
	                return new _isEmptyExpression2.default(this.parsePartialOcl(match[1]));
	            } else if (functionName === 'ISNOTEMPTY') {
	                return new _isEmptyExpression2.default(this.parsePartialOcl(match[1]));
	            }

	            throw new SyntaxError('Unknown function called: ' + functionName);
	        }
	    }], [{
	        key: 'trimLeft',
	        value: function trimLeft(string) {
	            return string.replace(/^\s*/, '').trim();
	        }
	    }, {
	        key: 'isExpression',
	        value: function isExpression(regex, expression) {
	            return new RegExp('^' + regex, 'i').exec(expression);
	        }
	    }]);

	    return OclParser;
	}();

	exports.default = OclParser;

/***/ }
/******/ ]);